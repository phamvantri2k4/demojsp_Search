/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.19
 * Generated at: 2025-04-16 13:20:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class posts_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/jsp/demo-jsp-and-servlet/src/main/webapp/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/fmt.tld", Long.valueOf(1664428278000L));
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1744632229283L));
    _jspx_dependants.put("jar:file:/D:/jsp/demo-jsp-and-servlet/src/main/webapp/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c.tld", Long.valueOf(1664428278000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fparseDate_0026_005fvar_005fvalue_005ftype_005fpattern_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fparseDate_0026_005fvar_005fvalue_005ftype_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005ffmt_005fparseDate_0026_005fvar_005fvalue_005ftype_005fpattern_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("        \r\n");
      out.write("            <!DOCTYPE html>\r\n");
      out.write("            <html>\r\n");
      out.write("\r\n");
      out.write("            <head>\r\n");
      out.write("                <title>Admin - Quản lý bài viết</title>\r\n");
      out.write("                <style>\r\n");
      out.write("                    body {\r\n");
      out.write("                        font-family: Arial, sans-serif;\r\n");
      out.write("                        margin: 0;\r\n");
      out.write("                        padding: 20px;\r\n");
      out.write("                        background-color: #f4f4f4;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .admin-header {\r\n");
      out.write("                        background-color: #333;\r\n");
      out.write("                        color: white;\r\n");
      out.write("                        padding: 15px;\r\n");
      out.write("                        margin: -20px -20px 20px -20px;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .admin-container {\r\n");
      out.write("                        max-width: 1200px;\r\n");
      out.write("                        margin: 0 auto;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .posts-table {\r\n");
      out.write("                        width: 100%;\r\n");
      out.write("                        border-collapse: collapse;\r\n");
      out.write("                        background-color: white;\r\n");
      out.write("                        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .posts-table th,\r\n");
      out.write("                    .posts-table td {\r\n");
      out.write("                        padding: 12px;\r\n");
      out.write("                        text-align: left;\r\n");
      out.write("                        border-bottom: 1px solid #ddd;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .posts-table th {\r\n");
      out.write("                        background-color: #4CAF50;\r\n");
      out.write("                        color: white;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .posts-table tr:hover {\r\n");
      out.write("                        background-color: #f5f5f5;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .status-select {\r\n");
      out.write("                        padding: 5px;\r\n");
      out.write("                        border-radius: 4px;\r\n");
      out.write("                        border: 1px solid #ddd;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .action-btn {\r\n");
      out.write("                        padding: 5px 10px;\r\n");
      out.write("                        border: none;\r\n");
      out.write("                        border-radius: 4px;\r\n");
      out.write("                        cursor: pointer;\r\n");
      out.write("                        margin-right: 5px;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .edit-btn {\r\n");
      out.write("                        background-color: #4CAF50;\r\n");
      out.write("                        color: white;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .delete-btn {\r\n");
      out.write("                        background-color: #f44336;\r\n");
      out.write("                        color: white;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .status-ACTIVE {\r\n");
      out.write("                        color: #4CAF50;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .status-PENDING {\r\n");
      out.write("                        color: #ff9800;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .status-DELETED {\r\n");
      out.write("                        color: #f44336;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .filters {\r\n");
      out.write("                        margin-bottom: 20px;\r\n");
      out.write("                        display: flex;\r\n");
      out.write("                        gap: 10px;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .search-box {\r\n");
      out.write("                        padding: 8px;\r\n");
      out.write("                        border: 1px solid #ddd;\r\n");
      out.write("                        border-radius: 4px;\r\n");
      out.write("                        width: 200px;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .btn {\r\n");
      out.write("                        padding: 5px 10px;\r\n");
      out.write("                        border: none;\r\n");
      out.write("                        border-radius: 4px;\r\n");
      out.write("                        cursor: pointer;\r\n");
      out.write("                        margin: 0 5px;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .btn-approve {\r\n");
      out.write("                        background-color: #4CAF50;\r\n");
      out.write("                        color: white;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .btn-reject {\r\n");
      out.write("                        background-color: #f44336;\r\n");
      out.write("                        color: white;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .status-badge {\r\n");
      out.write("                        padding: 3px 8px;\r\n");
      out.write("                        border-radius: 3px;\r\n");
      out.write("                        font-size: 14px;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .status-pending {\r\n");
      out.write("                        background-color: #ffd700;\r\n");
      out.write("                        color: #000;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .status-approved {\r\n");
      out.write("                        background-color: #4CAF50;\r\n");
      out.write("                        color: white;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .status-rejected {\r\n");
      out.write("                        background-color: #f44336;\r\n");
      out.write("                        color: white;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .header {\r\n");
      out.write("                        background-color: #f8f9fa;\r\n");
      out.write("                        padding: 15px;\r\n");
      out.write("                        border-radius: 4px;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .btn {\r\n");
      out.write("                        padding: 8px 16px;\r\n");
      out.write("                        border: none;\r\n");
      out.write("                        border-radius: 4px;\r\n");
      out.write("                        cursor: pointer;\r\n");
      out.write("                        color: white;\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    .btn:hover {\r\n");
      out.write("                        opacity: 0.9;\r\n");
      out.write("                    }\r\n");
      out.write("                </style>\r\n");
      out.write("            </head>\r\n");
      out.write("\r\n");
      out.write("            <body>\r\n");
      out.write("                <div class=\"admin-header\">\r\n");
      out.write("                    <div class=\"admin-container\">\r\n");
      out.write("                        <h1>Quản lý bài viết</h1>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"admin-container\">\r\n");
      out.write("                    <div class=\"header\"\r\n");
      out.write("                        style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;\">\r\n");
      out.write("                        <h2>Quản lý bài viết</h2>\r\n");
      out.write("                        <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/logout\" method=\"get\" style=\"margin: 0;\">\r\n");
      out.write("                            <button type=\"submit\" class=\"btn\" style=\"background-color: #dc3545;\">Đăng xuất</button>\r\n");
      out.write("                        </form>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"filters\">\r\n");
      out.write("                        <input type=\"text\" id=\"searchInput\" class=\"search-box\" placeholder=\"Tìm kiếm bài viết...\">\r\n");
      out.write("                        <select id=\"statusFilter\" class=\"status-select\">\r\n");
      out.write("                            <option value=\"\">Tất cả trạng thái</option>\r\n");
      out.write("                            <option value=\"ACTIVE\">Đang hoạt động</option>\r\n");
      out.write("                            <option value=\"DELETED\">Đã xóa</option>\r\n");
      out.write("                        </select>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <table class=\"posts-table\">\r\n");
      out.write("                        <thead>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th>ID</th>\r\n");
      out.write("                                <th>Tiêu đề</th>\r\n");
      out.write("                                <th>Nội dung</th>\r\n");
      out.write("                                <th>Tác giả</th>\r\n");
      out.write("                                <th>Ngày tạo</th>\r\n");
      out.write("                                <th>Trạng thái</th>\r\n");
      out.write("                                <th>Thao tác</th>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                        </thead>\r\n");
      out.write("                        <tbody>\r\n");
      out.write("                            ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                        </tbody>\r\n");
      out.write("                    </table>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <script>\r\n");
      out.write("                    //Form không hỗ trợ DELETE nên dùng fetch để xóa\r\n");
      out.write("                    function deletePost(postId) {\r\n");
      out.write("                        if (confirm('Bạn có chắc muốn xóa bài viết này?')) {\r\n");
      out.write("                            fetch(`");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/posts?postId=` + postId, {\r\n");
      out.write("                                method: 'DELETE'\r\n");
      out.write("                            })\r\n");
      out.write("                                .then(response => {\r\n");
      out.write("                                    if (response.ok) {\r\n");
      out.write("                                        window.location.reload();\r\n");
      out.write("                                    } else {\r\n");
      out.write("                                        alert('Có lỗi xảy ra khi xóa bài viết');\r\n");
      out.write("                                    }\r\n");
      out.write("                                })\r\n");
      out.write("                                .catch(error => {\r\n");
      out.write("                                    console.error('Error:', error);\r\n");
      out.write("                                    alert('Có lỗi xảy ra khi xóa bài viết');\r\n");
      out.write("                                });\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    // Implement search functionality\r\n");
      out.write("                    document.getElementById('searchInput').addEventListener('input', function (e) {\r\n");
      out.write("                        const searchText = e.target.value.toLowerCase();\r\n");
      out.write("                        const rows = document.querySelectorAll('.posts-table tbody tr');\r\n");
      out.write("\r\n");
      out.write("                        rows.forEach(row => {\r\n");
      out.write("                            const title = row.children[1].textContent.toLowerCase();\r\n");
      out.write("                            const author = row.children[2].textContent.toLowerCase();\r\n");
      out.write("\r\n");
      out.write("                            if (title.includes(searchText) || author.includes(searchText)) {\r\n");
      out.write("                                row.style.display = '';\r\n");
      out.write("                            } else {\r\n");
      out.write("                                row.style.display = 'none';\r\n");
      out.write("                            }\r\n");
      out.write("                        });\r\n");
      out.write("                    });\r\n");
      out.write("\r\n");
      out.write("                    // Implement status filter\r\n");
      out.write("                    document.getElementById('statusFilter').addEventListener('change', function (e) {\r\n");
      out.write("                        const status = e.target.value;\r\n");
      out.write("                        const rows = document.querySelectorAll('.posts-table tbody tr');\r\n");
      out.write("\r\n");
      out.write("                        rows.forEach(row => {\r\n");
      out.write("                            const rowStatus = row.querySelector('.status-select').value;\r\n");
      out.write("                            if (!status || rowStatus === status) {\r\n");
      out.write("                                row.style.display = '';\r\n");
      out.write("                            } else {\r\n");
      out.write("                                row.style.display = 'none';\r\n");
      out.write("                            }\r\n");
      out.write("                        });\r\n");
      out.write("                    });\r\n");
      out.write("\r\n");
      out.write("                    // Handle delete action\r\n");
      out.write("                    document.querySelectorAll('.btn-reject').forEach(button => {\r\n");
      out.write("                        button.addEventListener('click', function (e) {\r\n");
      out.write("                            e.preventDefault();\r\n");
      out.write("                            if (confirm('Bạn có chắc muốn xóa bài viết này?')) {\r\n");
      out.write("                                const postId = this.closest('form').querySelector('input[name=\"postId\"]').value;\r\n");
      out.write("\r\n");
      out.write("                                fetch(`");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/posts?postId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${postId}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`, {\r\n");
      out.write("                                    method: 'DELETE'\r\n");
      out.write("                                }).then(response => {\r\n");
      out.write("                                    if (response.ok) {\r\n");
      out.write("                                        window.location.reload();\r\n");
      out.write("                                    } else {\r\n");
      out.write("                                        alert('Có lỗi xảy ra khi xóa bài viết');\r\n");
      out.write("                                    }\r\n");
      out.write("                                });\r\n");
      out.write("                            }\r\n");
      out.write("                        });\r\n");
      out.write("                    });\r\n");
      out.write("                </script>\r\n");
      out.write("            </body>\r\n");
      out.write("\r\n");
      out.write("            </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /admin/posts.jsp(198,28) name = items type = jakarta.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/admin/posts.jsp(198,28) '${posts}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${posts}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /admin/posts.jsp(198,28) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("post");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("                                <tr>\r\n");
            out.write("                                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("                                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.title}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("                                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.body}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("                                    <td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.user.username}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("                                    <td>\r\n");
            out.write("                                        ");
            if (_jspx_meth_fmt_005fparseDate_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("                                        ");
            if (_jspx_meth_fmt_005fformatDate_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("                                    </td>\r\n");
            out.write("                                    <td>\r\n");
            out.write("                                        <span class=\"status-badge status-");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.status.toLowerCase()}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("                                            ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.status}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("                                        </span>\r\n");
            out.write("                                    </td>\r\n");
            out.write("                                    <td>\r\n");
            out.write("                                        ");
            if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("                                    </td>\r\n");
            out.write("                                </tr>\r\n");
            out.write("                            ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fparseDate_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  fmt:parseDate
    org.apache.taglibs.standard.tag.rt.fmt.ParseDateTag _jspx_th_fmt_005fparseDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.ParseDateTag) _005fjspx_005ftagPool_005ffmt_005fparseDate_0026_005fvar_005fvalue_005ftype_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.ParseDateTag.class);
    boolean _jspx_th_fmt_005fparseDate_005f0_reused = false;
    try {
      _jspx_th_fmt_005fparseDate_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fparseDate_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /admin/posts.jsp(205,40) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fparseDate_005f0.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.createdAt}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      // /admin/posts.jsp(205,40) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fparseDate_005f0.setPattern("yyyy-MM-dd'T'HH:mm:ss");
      // /admin/posts.jsp(205,40) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fparseDate_005f0.setVar("parsedDate");
      // /admin/posts.jsp(205,40) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fparseDate_005f0.setType("both");
      int _jspx_eval_fmt_005fparseDate_005f0 = _jspx_th_fmt_005fparseDate_005f0.doStartTag();
      if (_jspx_th_fmt_005fparseDate_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fparseDate_0026_005fvar_005fvalue_005ftype_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fparseDate_005f0);
      _jspx_th_fmt_005fparseDate_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fparseDate_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fparseDate_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /admin/posts.jsp(207,40) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${parsedDate}", java.util.Date.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      // /admin/posts.jsp(207,40) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setPattern("dd/MM/yyyy HH:mm:ss");
      int _jspx_eval_fmt_005fformatDate_005f0 = _jspx_th_fmt_005fformatDate_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
      _jspx_th_fmt_005fformatDate_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /admin/posts.jsp(215,40) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.status == 'ACTIVE'}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                            <button class=\"btn btn-reject\"\r\n");
          out.write("                                                onclick=\"deletePost('");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("')\">Xóa</button>\r\n");
          out.write("                                            <a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/admin/posts/edit/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${post.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\r\n");
          out.write("                                                class=\"btn btn-approve\">Sửa</a>\r\n");
          out.write("                                        ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
